document.addEventListener('DOMContentLoaded', () => {
    loadCurrencies();
    loadExpenses();
    document.getElementById('expense-form').addEventListener('submit', addExpense);
    document.getElementById('download-btn').addEventListener('click', downloadExcel);
});

function loadCurrencies() {
    const currencies = [
        { code: 'USD', name: 'US Dollar' }, { code: 'EUR', name: 'Euro' }, { code: 'JPY', name: 'Japanese Yen' },
        { code: 'GBP', name: 'British Pound' }, { code: 'AUD', name: 'Australian Dollar' }, { code: 'CAD', name: 'Canadian Dollar' },
        { code: 'CHF', name: 'Swiss Franc' }, { code: 'CNY', name: 'Chinese Yuan' }, { code: 'SEK', name: 'Swedish Krona' },
        { code: 'NZD', name: 'New Zealand Dollar' }, { code: 'MXN', name: 'Mexican Peso' }, { code: 'SGD', name: 'Singapore Dollar' },
        { code: 'HKD', name: 'Hong Kong Dollar' }, { code: 'NOK', name: 'Norwegian Krone' }, { code: 'KRW', name: 'South Korean Won' },
        { code: 'TRY', name: 'Turkish Lira' }, { code: 'INR', name: 'Indian Rupee' }, { code: 'RUB', name: 'Russian Ruble' },
        { code: 'BRL', name: 'Brazilian Real' }, { code: 'ZAR', name: 'South African Rand' }, { code: 'MYR', name: 'Malaysian Ringgit' },
        { code: 'THB', name: 'Thai Baht' }, { code: 'ILS', name: 'Israeli New Shekel' }, { code: 'CLP', name: 'Chilean Peso' },
        { code: 'PHP', name: 'Philippine Peso' }, { code: 'AED', name: 'United Arab Emirates Dirham' }, { code: 'COP', name: 'Colombian Peso' },
        { code: 'HUF', name: 'Hungarian Forint' }, { code: 'CZK', name: 'Czech Koruna' }, { code: 'PLN', name: 'Polish Zloty' },
        { code: 'RSD', name: 'Serbian Dinar' }, { code: 'ISK', name: 'Icelandic KrÃ³na' }, { code: 'DOP', name: 'Dominican Peso' },
        { code: 'PEN', name: 'Peruvian Nuevo Sol' }, { code: 'QAR', name: 'Qatari Riyal' }, { code: 'BHD', name: 'Bahraini Dinar' },
        { code: 'JOD', name: 'Jordanian Dinar' }, { code: 'KWD', name: 'Kuwaiti Dinar' }, { code: 'OMR', name: 'Omani Rial' },
        { code: 'LYD', name: 'Libyan Dinar' }, { code: 'TND', name: 'Tunisian Dinar' }, { code: 'SAR', name: 'Saudi Riyal' },
        { code: 'YER', name: 'Yemeni Rial' }
    ];

    const select = document.getElementById('currency-select');
    currencies.forEach(currency => {
        const option = document.createElement('option');
        option.value = currency.code;
        option.textContent = `${currency.name} (${currency.code})`;
        select.appendChild(option);
    });
}

function loadExpenses() {
    const expenses = JSON.parse(localStorage.getItem('expenses')) || [];
    expenses.forEach(expense => displayExpense(expense));
}

function addExpense(e) {
    e.preventDefault();

    const name = document.getElementById('expense-name').value;
    const amount = document.getElementById('expense-amount').value;
    const currency = document.getElementById('currency-select').value;
    const id = Date.now().toString();

    const expense = { id, name, amount, currency };
    const expenses = JSON.parse(localStorage.getItem('expenses')) || [];
    expenses.push(expense);
    localStorage.setItem('expenses', JSON.stringify(expenses));

    displayExpense(expense);

    document.getElementById('expense-name').value = '';
    document.getElementById('expense-amount').value = '';
    document.getElementById('currency-select').value = '';
}

function displayExpense(expense) {
    const expenseItem = document.createElement('li');
    expenseItem.classList.add('list-group-item', 'd-flex', 'justify-content-between', 'align-items-center');
    expenseItem.setAttribute('data-id', expense.id);

    expenseItem.innerHTML = `
        ${expense.name} - ${expense.amount} ${expense.currency}
        <div>
            <button class="btn btn-sm btn-warning edit-btn">Edit</button>
            <button class="btn btn-sm btn-danger delete-btn">Delete</button>
        </div>
    `;

    document.getElementById('expense-list').appendChild(expenseItem);

    attachEventListeners();
}

function attachEventListeners() {
    document.querySelectorAll('.delete-btn').forEach(button => {
        button.removeEventListener('click', deleteExpense);
        button.addEventListener('click', deleteExpense);
    });

    document.querySelectorAll('.edit-btn').forEach(button => {
        button.removeEventListener('click', editExpense);
        button.addEventListener('click', editExpense);
    });
}

function deleteExpense() {
    const id = this.parentElement.parentElement.getAttribute('data-id');
    const expenses = JSON.parse(localStorage.getItem('expenses')).filter(expense => expense.id !== id);
    localStorage.setItem('expenses', JSON.stringify(expenses));
    document.querySelector(`[data-id="${id}"]`).remove();
}

function editExpense() {
    const item = this.parentElement.parentElement;
    const id = item.getAttribute('data-id');
    const expenses = JSON.parse(localStorage.getItem('expenses'));
    const expense = expenses.find(expense => expense.id === id);

    document.getElementById('expense-name').value = expense.name;
    document.getElementById('expense-amount').value = expense.amount;
    document.getElementById('currency-select').value = expense.currency;

    deleteExpense.call(this);
}

function downloadExcel() {
    const expenses = JSON.parse(localStorage.getItem('expenses')) || [];
    const ws = XLSX.utils.json_to_sheet(expenses, { header: ["name", "amount", "currency"] });
    const wb = XLSX.utils.book_new();
    XLSX.utils.book_append_sheet(wb, ws, "Expenses");
    XLSX.writeFile(wb, "expenses.xlsx");
}

